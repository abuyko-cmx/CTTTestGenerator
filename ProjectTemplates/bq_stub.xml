<?xml version="1.0" encoding="UTF-8"?>

<!--Generated by CTT Stubs Editor 23.02.18 14:53-->
<stubMQ xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="http://ctt.cinimex.ru/stubMQ.xsd" queueIn="ESB_2_BIS_ENTRY" queueOut="BIS_2_ESB" lookupTimeout="1000" name="bq_stub" language="groovy" theadPoolSize="10">
  <connectionPool timeout="3600000" maxConnections="115" maxUnusedConnections="30"/>
  <queueManagers>
    <queueManager name="QM2" host="rshb-08.vm.cmx.ru" readEncoding="UTF-8" writeEncoding="UTF-8" channel="SYSTEM.DEF.SVRCONN" user="" password="" port="1415" ccsid="1208">
      <queue name="BIS_2_ESB_ASYNC_TEST" objName="BIS_2_ESB"/>
      <queue name="ESB_2_BIS_ENTRY_" objName="ESB_2_BIS_ENTRY"/>
    </queueManager>
  </queueManagers>
  <logConfig level="ALL" writeMessages="true" memoryStore="false"/>
  <global name="global">
    <request>
      <content><![CDATA[]]></content>
    </request>
    <response name="tc_bisq"><![CDATA[<?xml version="1.0" encoding="UTF-8"?>
<tr:message xmlns:tr="http://bis.ru/transport" fromBranch="${from_branch_resp}" fromSystem="BISQUIT" operation="" pass="ASYNC" service="${service}" toBranch="${to_branch_resp}" toSystem="${to_system_resp}" userDirect="ANSWER">
 <tr:parameters>
  <tr:param>
   <tr:name>DATA</tr:name>
   <tr:num>1</tr:num>
   <tr:type>DATASET</tr:type>
   <tr:value>${inf_obj}</tr:value>
   <tr:format>CODED</tr:format>
  </tr:param>
 </tr:parameters>
</tr:message>]]></response>
    <response name="io_resp"><![CDATA[]]></response>
    <response name="not_found_deposite"><![CDATA[]]></response>
    <response name="error_response"><![CDATA[]]></response>
    <response name="empty_data_list"><![CDATA[]]></response>
    <response name="not_empty_data_list"><![CDATA[]]></response>
    <response name="test_duplicate_data_list"><![CDATA[]]></response>
    <script name="global_script" type="main"><![CDATA[import com.ibm.mq.MQMessage

//Получаем заголовки
MQMessage msgIn = contextRequest.getRequest().getNativeMessage()
MQMessage msgOut = new MQMessage()

//Получаем данные из входящего сообщения
c_JMSMessageID = msgIn.getStringProperty("c_JMSMessageID")
c_GUID = msgIn.getStringProperty("c_GUID")

//Получаем name_composite, если есть
	try {
		        c_NameComposite = msgIn.getStringProperty("NameComposite");
	} catch (e) {		
		c_NameComposite = null;
	}

request = contextRequest.getRequest().toString()
message = new XmlSlurper(false,true).parseText(request)
inf_obj_req = message.'**'.find { node-> node.name() == 'value'}.text()

//Получаем параметры ТК
from_branch_req = message.@fromBranch
to_branch_req = message.@toBranch
from_system_req = message.@fromSystem
to_system_req = message.@toSystem
operation = message.@operation
pass = message.@pass
service = message.@service

//Получаем параметры ИО
rootNode = new XmlSlurper(false,true).parseText(inf_obj_req)
check_id = rootNode.'**'.find {it.name()  == 'FilialId'}.ObjectId.toInteger()

//Логика работы заглушки

def empty_list = [1001, 12345, 7300];
def not_empty_list = [1002, 7400, 6668, 6670, 7600];
def duplicate_list = [1003, 1010, 54321 ];
def error_list = [6669, 6671, 6650];
def skip_list = [99, 11];
def timeout_list = [6667];

println '++++++++check_id++++++++++++: ' + check_id
if (check_id in empty_list ) {
	inf_obj_template = "empty_data_list"
} else if (check_id in not_empty_list) {
	inf_obj_template = "not_empty_data_list"
} else if (check_id in duplicate_list) {
	inf_obj_template = "test_duplicate_data_list"
} else if (check_id in error_list) {
	inf_obj_template = "error_response"
} else if (check_id in skip_list) {
	inf_obj_template = "skip_code"
} else if (check_id in timeout_list) {
	sleep(30000);
} else {
	inf_obj_template = "io_resp"
}

println '++++++++template++++++++++++: ' + inf_obj_template
//Подготавливаем ответ
inf_obj = contextResponse.getTemplate(inf_obj_template)

response = contextResponse.getTemplate("tc_bisq")
response.setParam("inf_obj", inf_obj.toString(), "ESCAPE")
response.setParam("to_branch_resp", from_branch_req.toString())
response.setParam("from_branch_resp", to_branch_req.toString())
response.setParam("from_system_resp", to_system_req.toString())
response.setParam("to_system_resp", from_system_req.toString())
response.setParam("service", service.toString())
response.setParam("operation", operation.toString())
response.setParam("pass", pass.toString())
response.setParam("userDirect", "ANSWER")

if (c_NameComposite != null) {
msgOut.setStringProperty("NameComposite", c_NameComposite)
}
msgOut.setStringProperty("c_CorrelationSet", c_JMSMessageID)
msgOut.setStringProperty("c_GUID_CORR", c_GUID)
msgOut.format = com.ibm.mq.MQC.MQFMT_STRING
msgOut.characterSet = 1208
msgOut.writeString(response.toString())
mqUtils.send("BIS_2_ESB", msgOut);]]></script>
  </global>
</stubMQ>
